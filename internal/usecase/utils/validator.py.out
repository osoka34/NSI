import internal.usecase.parser.s_constant
import uuid
from internal.dto import GetShortPathRequest


###    Validates the data type.
#    Checks if the data type is valid.
#
#
# @param		d_type	int - data type
#

def validate_dtype(d_type: int) -> bool:
    match d_type:
        case internal.usecase.parser.s_constant.D_TYPE_EOP:
            return True
        case internal.usecase.parser.s_constant.D_TYPE_SPACE_ENV:
            return True
        case internal.usecase.parser.s_constant.D_TYPE_C20:
            return True
        case _:
            return False


## @brief     Generates a UUID.
#

def generate_uuid():
    return str(uuid.uuid4())



###    Validates the size of the matrix.
#    Checks if the size of the matrix is valid.
#
#
# @param		req	GetShortPathRequest - request object
#

def validate_size(req: GetShortPathRequest) -> bool:
    return req.size * 2 == len(req.flatten_matrix)


